# HttpStatus Messages
http.status.ok=OK
http.status.badRequest=Bad Request. {0}
http.status.unauthorized=Unauthorized
http.status.forbidden=Forbidden
http.status.notFound=Not Found
http.status.methodNotAllowed=Method Not Allowed
http.status.requestTimeout=Request Timeout
http.status.unsupportedMediaType=Unsupported Media Type
http.status.exceptionFailed=Expectation Failed
http.status.tooManyRequests=Too Many Requests
http.status.internalServerError=Internal Server Error
http.status.serviceUnavailable=Service Unavailable
http.status.gatewayTimeout=Gateway Timeout
http.status.networkAuthRequired=Network Authentication Required
# Exception Messages (with anonymous params)
http.method.notSupported=Not Support [{0}] method
param.value.invalid=[{0}] illegal value
param.missing=[{0}:{1}]is not present
inner.srm.duplicate=[ {0} - {1} ] has been registed
# token
token.apply.info.invalid=token apply info invalid
token.invalid=token invalid
token.account.alias.exception=query token account alias exception
token.account.notExists=[{0}]account not exists
# Cluster/Service Manager
cluster.notAvailable=cluster not available
node.regAddr.get.failed=get node reg addr failed
node.regAddr.dup=node exist
node.notStarted=node not started
node.notAvailable=not available node
node.healthy.check.timeout=node healthy check timeout
node.healthy.check.failed=node healthy check failed
node.service.alias.empty=node service alias empty
node.registered=node registered
node.notExists=node not exists
service.notExists=[{0}]service not exists
service.list.notExists=service list not exists
service.name.dup=service name exist
service.folder.name.dup=service name conflict folder name
service.name.dupInNode=[{0}] [{1}] service name exist
service.dir.notExists=[{0}] service dir not exist
service.delete.failed=[{0}] delete service  failed
service.thumb.update.failed=[{0}] update service thumb failed
service.props.get.failed=[{0}] get service props failed
service.kqmd.get.failed=get {0}.kqmd failed
service.nodes.stopped.notExists=[{0}] stopped nodes not exist
service.nodes.empty=[{0}] query node failed
service.operation.failed=operation service failed [{0}]
service.perm.update.failed=[{0}] update service permission failed
service.get.service.operator.list.failed=get service operator list failed!
service.alias.exist=service alias exist, no register
folder.name.dup=[{0}] duplicated folder name
folder.no.data=no folder data
# ServerManager
servermgr.account.dup=account exist
servermgr.account.password.error=wrong username or password
servermgr.account.password.old.error=old password error
servermgr.no.auth=no auth
servermgr.uatoken.empty=empty ua_token
servermgr.account.notfound=[{0}] token invalid
servermgr.account.query.failed=[{0}] query account failed
#子服务没有匿名访问权限
servermgr.no.anonymous.permission=Sub service: [{0}] has no anonymous permission
# Exception Messages
# Validation Messages (with named params)
validation.notBlank={field} not blank
validation.value.invalid=invalid {field} value
validation.value.min={field} min {value}
validation.value.max={field} max {value}
validation.range.invalid={field} between {min} and {max}
validation.enum.message=range:
validation.options.invalid={field} range: {options}
validation.tokenInfo.account.notBlank=must not be blank
# load balancing strategy
load.balancing.strategy.KqRoundRobinRule=Round Robin Rule
load.balancing.strategy.KqBestAvailableRule=Best Available Rule
load.balancing.strategy.KqWeightedResponseTimeRule=Weighted Response Time Rule
user.service=user service
public.service=public service
big.data.service=big data service
#log level
log.level.info=INFO
log.level.warn=WARN
log.level.error=ERROR
log.level.debug=DEBUGGER
# service type
#service.type.map.service=2D map service
#service.type.data.service=2D data service
#service.type.3d.service=3D map service
#service.type.network.service=network service
#service.type.plotting.service=plotting service
#service.type.spatial.analysis.service=spatial analysis service
#service.type.image.Service=image service
service.type.stream.service=stream Service
service.type.geo.service=geo Service
#log type
access.log=access log
system.log=system log
ext.proxy.log=Function service log
gis.service.log=gis service log
operation.log=operation log
all.log=call chain log
#log field name
instanceName=instance name
remote_user=user name
remote_addr=client ip
request=request url
request_method=method
status=status code
status_str=status str
service_type=service type
interface_type=interface type
datetime=time
service=service name
elapsed_time=elapsed time
level=level
message=abstract
custodyDatabase=Custody Database
logEnableMsg=The logging feature has been disabled.
#
bizException=warning. {0}
sysException=fail. {0}
#
monitor.alert.email.verify.fail=SMTP[{0}] verify fail.